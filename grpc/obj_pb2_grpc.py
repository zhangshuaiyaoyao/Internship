# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import obj_pb2 as obj__pb2


class StreamServiceStub(object):
  """道路目标信息接口
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Pubobj = channel.unary_unary(
        '/grpcstream.StreamService/Pubobj',
        request_serializer=obj__pb2.PubobjRequestData.SerializeToString,
        response_deserializer=obj__pb2.ResponseData.FromString,
        )


class StreamServiceServicer(object):
  """道路目标信息接口
  """

  def Pubobj(self, request, context):
    """道路目标信息接口
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_StreamServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Pubobj': grpc.unary_unary_rpc_method_handler(
          servicer.Pubobj,
          request_deserializer=obj__pb2.PubobjRequestData.FromString,
          response_serializer=obj__pb2.ResponseData.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'grpcstream.StreamService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
